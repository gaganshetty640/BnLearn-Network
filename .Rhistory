target_query_final
combined_query <- cbind.data.frame(target_query_initial,target_query_final)
combined_query
View(combined_query)
target_query_final[,1]
target_query_final
class(target_query_final)
class(combined_query)
cbind.data.frame(target_query_initial,target_query_final)[-3]
combined_query <- cbind.data.frame(target_query_initial,target_query_final)[-3]
colnames(combined_query) <- c("States" ,"BeforeEvidence","AfterEvidence")
View(combined_query)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
##### Set Directory ####
#setwd("C:/Users/gagan.shetty/CPS/Bnlearn_Networks")
####Load libraries####
if(!("shiny" %in% installed.packages()[,1] )){install.packages("shiny")}
if(!("shinymanager" %in% installed.packages()[,1] )){install.packages("shinymanager")}
if(!("shinyjs" %in% installed.packages()[,1] )){install.packages("shinyjs")}
if(!("data.table" %in% installed.packages()[,1] )){install.packages("data.table")}
if(!("dygraphs" %in% installed.packages()[,1] )){install.packages("dygraphs")}
if(!("shinydashboard" %in% installed.packages()[,1] )){install.packages("shinydashboard")}
if(!("plotly" %in% installed.packages()[,1] )){install.packages("plotly")}
if(!("tibble" %in% installed.packages()[,1] )){install.packages("tibble")}
if(!("dplyr" %in% installed.packages()[,1] )){install.packages("dplyr")}
if(!("ggplot2" %in% installed.packages()[,1] )){install.packages("ggplot2")}
if(!("bnlearn" %in% installed.packages()[,1] )){install.packages("bnlearn")}
if(!("forecast" %in% installed.packages()[,1] )){install.packages("forecast")}
if(!("visNetwork" %in% installed.packages()[,1] )){install.packages("visNetwork")}
if(!("gRain" %in% installed.packages()[,1] )){install.packages("gRain")}
# install.packages("visNetwork")
####packages####
library(shiny)
library(shinymanager)
library(shinydashboard)
library(plotly)
library(tibble)
library(dplyr)
library(DT)
library(XML)
#library(highcharter)
library (shinyjs)
library(data.table)
library(dygraphs)
library(ggplot2)
library(lubridate)
library(visNetwork)
library(gRain)
# Load the data ####
data_copy <- read.csv("Mid_High_Segment_new connections_15Dec2020_20210113_194701988.csv",na.strings = c("?",NA))
# Copy the original data to some other variable
data1 <- data_copy
# Data Preprocessing ####
#Replace NA values with median of that column
# sapply(data_copy,function(x) sum(is.na(x)))
for(i in 1:ncol(data1)){
data1[is.na(data1[,i]), i] <- median((data1[,i]), na.rm = TRUE)
}
# sapply(data1,function(x) sum(is.na(x)))
#Method 1 ####
data1[1:10] <- lapply(data1[1:10], as.factor)
#Method 2 ####
# storing continuous data columns (column 11 to 29) in variable data2
data2 <- data1[,c(11:29)]
data2$CLTV_12_months <- ifelse(data2$CLTV_12_months<=0,"<=0", ifelse(data2$CLTV_12_months>0 & data2$CLTV_12_months<=844244.255,"<=844244.255",ifelse(data2$CLTV_12_months>844244.255,">844244.255",""))) %>% as.factor
data2$WHITE_HANGING_HEART_T_LIGHT_HOLDER <- ifelse(data2$WHITE_HANGING_HEART_T_LIGHT_HOLDER<=0.38,"<=0.38", ifelse(data2$WHITE_HANGING_HEART_T_LIGHT_HOLDER>0.38 & data2$WHITE_HANGING_HEART_T_LIGHT_HOLDER<=0.54,"<=0.54",ifelse(data2$WHITE_HANGING_HEART_T_LIGHT_HOLDER>0.54,">0.54",""))) %>% as.factor
data2$REGENCY_CAKESTAND_3_TIER <- ifelse(data2$REGENCY_CAKESTAND_3_TIER<=0.33,"<=0.33", ifelse(data2$REGENCY_CAKESTAND_3_TIER>0.33 & data2$REGENCY_CAKESTAND_3_TIER<=0.41,"<=0.41",ifelse(data2$REGENCY_CAKESTAND_3_TIER>0.41,">0.41",""))) %>% as.factor
data2$JUMBO_BAG_RED_RETROSPOT <- ifelse(data2$JUMBO_BAG_RED_RETROSPOT<=0.31,"<=0.31", ifelse(data2$JUMBO_BAG_RED_RETROSPOT>0.31 & data2$JUMBO_BAG_RED_RETROSPOT<=0.49,"<=0.49",ifelse(data2$JUMBO_BAG_RED_RETROSPOT>0.49,">0.49",""))) %>% as.factor
data2$PARTY_BUNTING <- ifelse(data2$PARTY_BUNTING<=0.32,"<=0.32", ifelse(data2$PARTY_BUNTING>0.32 & data2$PARTY_BUNTING<=0.65,"<=0.65",ifelse(data2$PARTY_BUNTING>0.65,">0.65",""))) %>% as.factor
data2$LUNCH_BAG_RED_RETROSPOT <- ifelse(data2$LUNCH_BAG_RED_RETROSPOT<=0.32,"<=0.32", ifelse(data2$LUNCH_BAG_RED_RETROSPOT>0.32 & data2$LUNCH_BAG_RED_RETROSPOT<=0.51,"<=0.51",ifelse(data2$LUNCH_BAG_RED_RETROSPOT>0.51,">0.51",""))) %>% as.factor
data2$SET_OF_3_CAKE_TINS_PANTRY_DESIGN <- ifelse(data2$SET_OF_3_CAKE_TINS_PANTRY_DESIGN<=0.34,"<=0.34", ifelse(data2$SET_OF_3_CAKE_TINS_PANTRY_DESIGN>0.34 & data2$SET_OF_3_CAKE_TINS_PANTRY_DESIGN<=0.56,"<=0.56",ifelse(data2$SET_OF_3_CAKE_TINS_PANTRY_DESIGN>0.56,">0.56",""))) %>% as.factor
data2$LUNCH_BAG_BLACK_SKULL <- ifelse(data2$LUNCH_BAG_BLACK_SKULL<=0.29,"<=0.29", ifelse(data2$LUNCH_BAG_BLACK_SKULL>0.29 & data2$LUNCH_BAG_BLACK_SKULL<=0.59,"<=0.59",ifelse(data2$LUNCH_BAG_BLACK_SKULL>0.59,">0.59",""))) %>% as.factor
data2$PACK_OF_72_RETROSPOT_CAKE_CASES <- ifelse(data2$PACK_OF_72_RETROSPOT_CAKE_CASES<=0.26,"<=0.26", ifelse(data2$PACK_OF_72_RETROSPOT_CAKE_CASES>0.26 & data2$PACK_OF_72_RETROSPOT_CAKE_CASES<=0.42,"<=0.42",ifelse(data2$PACK_OF_72_RETROSPOT_CAKE_CASES>0.42,">0.42",""))) %>% as.factor
data2$PAPER_CHAIN_KIT_50_S_CHRISTMAS <- ifelse(data2$PAPER_CHAIN_KIT_50_S_CHRISTMAS<=0.29,"<=0.29", ifelse(data2$PAPER_CHAIN_KIT_50_S_CHRISTMAS>0.29 & data2$PAPER_CHAIN_KIT_50_S_CHRISTMAS<=0.39,"<=0.39",ifelse(data2$PAPER_CHAIN_KIT_50_S_CHRISTMAS>0.39,">0.39",""))) %>% as.factor
data2$LUNCH_BAG_SPACEBOY_DESIGN <- ifelse(data2$LUNCH_BAG_SPACEBOY_DESIGN<=0.38,"<=0.38", ifelse(data2$LUNCH_BAG_SPACEBOY_DESIGN>0.38 & data2$LUNCH_BAG_SPACEBOY_DESIGN<=0.51,"<=0.51",ifelse(data2$LUNCH_BAG_SPACEBOY_DESIGN>0.51,">0.51",""))) %>% as.factor
data2$LUNCH_BAG_CARS_BLUE <- ifelse(data2$LUNCH_BAG_CARS_BLUE<=0.28,"<=0.28", ifelse(data2$LUNCH_BAG_CARS_BLUE>0.28 & data2$LUNCH_BAG_CARS_BLUE<=0.63,"<=0.63",ifelse(data2$LUNCH_BAG_CARS_BLUE>0.63,">0.63",""))) %>% as.factor
data2$LUNCH_BAG_PINK_POLKADOT <- ifelse(data2$LUNCH_BAG_PINK_POLKADOT<=0.38,"<=0.38", ifelse(data2$LUNCH_BAG_PINK_POLKADOT>0.38 & data2$LUNCH_BAG_PINK_POLKADOT<=0.72,"<=0.72",ifelse(data2$LUNCH_BAG_PINK_POLKADOT>0.72,">0.72",""))) %>% as.factor
data2$JAM_MAKING_SET_WITH_JARS <- ifelse(data2$JAM_MAKING_SET_WITH_JARS<=0.3,"<=0.3", ifelse(data2$JAM_MAKING_SET_WITH_JARS>0.3 & data2$JAM_MAKING_SET_WITH_JARS<=0.5,"<=0.5",ifelse(data2$JAM_MAKING_SET_WITH_JARS>0.5,">0.5",""))) %>% as.factor
data2$LUNCH_BAG_SUKI_DESIGN <- ifelse(data2$LUNCH_BAG_SUKI_DESIGN<=0.29,"<=0.29", ifelse(data2$LUNCH_BAG_SUKI_DESIGN>0.29 & data2$LUNCH_BAG_SUKI_DESIGN<=0.54,"<=0.54",ifelse(data2$LUNCH_BAG_SUKI_DESIGN>0.54,">0.54",""))) %>% as.factor
data2$LUNCH_BAG_APPLE_DESIGN <- ifelse(data2$LUNCH_BAG_APPLE_DESIGN<=0.34,"<=0.34", ifelse(data2$LUNCH_BAG_APPLE_DESIGN>0.34 & data2$LUNCH_BAG_APPLE_DESIGN<=0.47,"<=0.47",ifelse(data2$LUNCH_BAG_APPLE_DESIGN>0.47,">0.47",""))) %>% as.factor
data2$JAM_MAKING_SET_PRINTED <- ifelse(data2$JAM_MAKING_SET_PRINTED<=0.26,"<=0.26", ifelse(data2$JAM_MAKING_SET_PRINTED>0.26 & data2$JAM_MAKING_SET_PRINTED<=0.35,"<=0.35",ifelse(data2$JAM_MAKING_SET_PRINTED>0.35,">0.35",""))) %>% as.factor
data2$LUNCH_BAG_WOODLAND <- ifelse(data2$LUNCH_BAG_WOODLAND<=0.39,"<=0.39", ifelse(data2$LUNCH_BAG_WOODLAND>0.39 & data2$LUNCH_BAG_WOODLAND<=0.51,"<=0.51",ifelse(data2$LUNCH_BAG_WOODLAND>0.51,">0.51",""))) %>% as.factor
data2$JUMBO_STORAGE_BAG_SUKI <- ifelse(data2$JUMBO_STORAGE_BAG_SUKI<=0.36,"<=0.36", ifelse(data2$JUMBO_STORAGE_BAG_SUKI>0.36 & data2$JUMBO_STORAGE_BAG_SUKI<=0.84,"<=0.84",ifelse(data2$JUMBO_STORAGE_BAG_SUKI>0.84,">0.84",""))) %>% as.factor
data_final<-cbind.data.frame(data1[,1:10],data2)
# str(data_final)
# Look at the directed acyclic graph
dag <- empty.graph(nodes = c("Urban",
"Rural",
"Surburban",
"Web",
"Phone",
"Multichannel",
"Discount",
"BOGO",
"NoOffer",
"Treated_Responded",
"CLTV_12_months",
"WHITE_HANGING_HEART_T_LIGHT_HOLDER",
"REGENCY_CAKESTAND_3_TIER",
"JUMBO_BAG_RED_RETROSPOT",
"PARTY_BUNTING",
"LUNCH_BAG_RED_RETROSPOT",
"SET_OF_3_CAKE_TINS_PANTRY_DESIGN",
"LUNCH_BAG_BLACK_SKULL",
"PACK_OF_72_RETROSPOT_CAKE_CASES",
"PAPER_CHAIN_KIT_50_S_CHRISTMAS",
"LUNCH_BAG_SPACEBOY_DESIGN",
"LUNCH_BAG_CARS_BLUE",
"LUNCH_BAG_PINK_POLKADOT",
"JAM_MAKING_SET_WITH_JARS",
"LUNCH_BAG_SUKI_DESIGN",
"LUNCH_BAG_APPLE_DESIGN",
"JAM_MAKING_SET_PRINTED",
"LUNCH_BAG_WOODLAND",
"JUMBO_STORAGE_BAG_SUKI"))
arc.set <- matrix(c("PACK_OF_72_RETROSPOT_CAKE_CASES",	"CLTV_12_months",
"LUNCH_BAG_APPLE_DESIGN",	"CLTV_12_months",
"LUNCH_BAG_WOODLAND",	"CLTV_12_months",
"JAM_MAKING_SET_WITH_JARS",	"PACK_OF_72_RETROSPOT_CAKE_CASES",
"JAM_MAKING_SET_WITH_JARS",	"JAM_MAKING_SET_PRINTED",
"JAM_MAKING_SET_WITH_JARS",	"SET_OF_3_CAKE_TINS_PANTRY_DESIGN",
"SET_OF_3_CAKE_TINS_PANTRY_DESIGN",	"WHITE_HANGING_HEART_T_LIGHT_HOLDER",
"SET_OF_3_CAKE_TINS_PANTRY_DESIGN",	"LUNCH_BAG_SPACEBOY_DESIGN",
"LUNCH_BAG_SPACEBOY_DESIGN",	"LUNCH_BAG_APPLE_DESIGN",
"SET_OF_3_CAKE_TINS_PANTRY_DESIGN",	"JUMBO_STORAGE_BAG_SUKI",
"BOGO",	"JAM_MAKING_SET_WITH_JARS",
"Discount",	"BOGO",
"NoOffer",	"Discount",
"NoOffer",	"BOGO",
"NoOffer",	"Treated_Responded",
"Discount",	"LUNCH_BAG_WOODLAND",
"LUNCH_BAG_WOODLAND",	"LUNCH_BAG_RED_RETROSPOT",
"LUNCH_BAG_APPLE_DESIGN",	"LUNCH_BAG_RED_RETROSPOT",
"LUNCH_BAG_APPLE_DESIGN",	"LUNCH_BAG_WOODLAND",
"LUNCH_BAG_APPLE_DESIGN",	"LUNCH_BAG_SUKI_DESIGN",
"LUNCH_BAG_CARS_BLUE",	"LUNCH_BAG_WOODLAND",
"LUNCH_BAG_CARS_BLUE",	"LUNCH_BAG_SUKI_DESIGN",
"LUNCH_BAG_SUKI_DESIGN",	"LUNCH_BAG_BLACK_SKULL",
"LUNCH_BAG_BLACK_SKULL",	"LUNCH_BAG_PINK_POLKADOT",
"LUNCH_BAG_PINK_POLKADOT",	"JUMBO_BAG_RED_RETROSPOT",
"LUNCH_BAG_RED_RETROSPOT", "JUMBO_BAG_RED_RETROSPOT",
"JUMBO_BAG_RED_RETROSPOT",	"JAM_MAKING_SET_PRINTED",
"PACK_OF_72_RETROSPOT_CAKE_CASES",	"PAPER_CHAIN_KIT_50_S_CHRISTMAS",
"PAPER_CHAIN_KIT_50_S_CHRISTMAS",	"REGENCY_CAKESTAND_3_TIER",
"PAPER_CHAIN_KIT_50_S_CHRISTMAS",	"PARTY_BUNTING",
# "WHITE_HANGING_HEART_T_LIGHT_HOLDER",	"Multichannel",
"Multichannel",	"Web",
"Multichannel",	"JUMBO_BAG_RED_RETROSPOT",
"Phone", "Web",
"Phone", "Multichannel",
"Urban", "JAM_MAKING_SET_PRINTED",
"Urban", "Rural",
"Urban", "Surburban",
"Surburban", "LUNCH_BAG_RED_RETROSPOT"
),
byrow = TRUE, ncol = 2,
dimnames = list(NULL, c("from", "to")))
# Assigning the same arc
arcs(dag) <- arc.set
fittedmodel <- bn.fit(dag,data_final,method = 'mle')
compile_model <- compile(as.grain(fittedmodel))
runApp()
shiny::runApp()
setwd("C:/Users/gagan.shetty/CPS/Bnlearn_Networks")
####Load libraries####
if(!("shiny" %in% installed.packages()[,1] )){install.packages("shiny")}
# if(!("shinymanager" %in% installed.packages()[,1] )){install.packages("shinymanager")}
if(!("shinyjs" %in% installed.packages()[,1] )){install.packages("shinyjs")}
if(!("data.table" %in% installed.packages()[,1] )){install.packages("data.table")}
if(!("dygraphs" %in% installed.packages()[,1] )){install.packages("dygraphs")}
if(!("shinydashboard" %in% installed.packages()[,1] )){install.packages("shinydashboard")}
# if(!("plotly" %in% installed.packages()[,1] )){install.packages("plotly")}
if(!("tibble" %in% installed.packages()[,1] )){install.packages("tibble")}
# if(!("dplyr" %in% installed.packages()[,1] )){install.packages("dplyr")}
if(!("ggplot2" %in% installed.packages()[,1] )){install.packages("ggplot2")}
if(!("bnlearn" %in% installed.packages()[,1] )){install.packages("bnlearn")}
if(!("forecast" %in% installed.packages()[,1] )){install.packages("forecast")}
if(!("visNetwork" %in% installed.packages()[,1] )){install.packages("visNetwork")}
if(!("gRain" %in% installed.packages()[,1] )){install.packages("gRain")}
# install.packages("visNetwork")
####packages####
library(shiny)
# library(shinymanager)
library(shinydashboard)
# library(plotly)
library(tibble)
# library(dplyr)
library(DT)
library(XML)
#library(highcharter)
library (shinyjs)
library(data.table)
library(dygraphs)
library(ggplot2)
library(lubridate)
library(visNetwork)
library(gRain)
library(bnlearn)
runApp()
runApp()
##### Set Directory ####
# setwd("C:/Users/gagan.shetty/CPS/Bnlearn_Networks")
####Load libraries####
if(!("shiny" %in% installed.packages()[,1] )){install.packages("shiny")}
# if(!("shinymanager" %in% installed.packages()[,1] )){install.packages("shinymanager")}
if(!("shinyjs" %in% installed.packages()[,1] )){install.packages("shinyjs")}
if(!("data.table" %in% installed.packages()[,1] )){install.packages("data.table")}
if(!("dygraphs" %in% installed.packages()[,1] )){install.packages("dygraphs")}
if(!("shinydashboard" %in% installed.packages()[,1] )){install.packages("shinydashboard")}
# if(!("plotly" %in% installed.packages()[,1] )){install.packages("plotly")}
if(!("tibble" %in% installed.packages()[,1] )){install.packages("tibble")}
# if(!("dplyr" %in% installed.packages()[,1] )){install.packages("dplyr")}
if(!("ggplot2" %in% installed.packages()[,1] )){install.packages("ggplot2")}
if(!("bnlearn" %in% installed.packages()[,1] )){install.packages("bnlearn")}
if(!("forecast" %in% installed.packages()[,1] )){install.packages("forecast")}
if(!("visNetwork" %in% installed.packages()[,1] )){install.packages("visNetwork")}
if(!("gRain" %in% installed.packages()[,1] )){install.packages("gRain")}
# install.packages("visNetwork")
####packages####
library(shiny)
# library(shinymanager)
library(shinydashboard)
# library(plotly)
library(tibble)
# library(dplyr)
library(DT)
library(XML)
#library(highcharter)
library (shinyjs)
library(data.table)
library(dygraphs)
library(ggplot2)
library(lubridate)
library(visNetwork)
library(gRain)
library(bnlearn)
# Load the data ####
data_copy <- read.csv("Mid_High_Segment_new connections_15Dec2020_20210113_194701988.csv",na.strings = c("?",NA))
# Copy the original data to some other variable
data1 <- data_copy
# Data Preprocessing ####
#Replace NA values with median of that column
# sapply(data_copy,function(x) sum(is.na(x)))
for(i in 1:ncol(data1)){
data1[is.na(data1[,i]), i] <- median((data1[,i]), na.rm = TRUE)
}
# sapply(data1,function(x) sum(is.na(x)))
#Method 1 ####
data1[1:10] <- lapply(data1[1:10], as.factor)
#Method 2 ####
# storing continuous data columns (column 11 to 29) in variable data2
data2 <- data1[,c(11:29)]
data2$CLTV_12_months <- ifelse(data2$CLTV_12_months<=0,"<=0", ifelse(data2$CLTV_12_months>0 & data2$CLTV_12_months<=844244.255,"<=844244.255",ifelse(data2$CLTV_12_months>844244.255,">844244.255",""))) %>% as.factor
data2$WHITE_HANGING_HEART_T_LIGHT_HOLDER <- ifelse(data2$WHITE_HANGING_HEART_T_LIGHT_HOLDER<=0.38,"<=0.38", ifelse(data2$WHITE_HANGING_HEART_T_LIGHT_HOLDER>0.38 & data2$WHITE_HANGING_HEART_T_LIGHT_HOLDER<=0.54,"<=0.54",ifelse(data2$WHITE_HANGING_HEART_T_LIGHT_HOLDER>0.54,">0.54",""))) %>% as.factor
data2$REGENCY_CAKESTAND_3_TIER <- ifelse(data2$REGENCY_CAKESTAND_3_TIER<=0.33,"<=0.33", ifelse(data2$REGENCY_CAKESTAND_3_TIER>0.33 & data2$REGENCY_CAKESTAND_3_TIER<=0.41,"<=0.41",ifelse(data2$REGENCY_CAKESTAND_3_TIER>0.41,">0.41",""))) %>% as.factor
data2$JUMBO_BAG_RED_RETROSPOT <- ifelse(data2$JUMBO_BAG_RED_RETROSPOT<=0.31,"<=0.31", ifelse(data2$JUMBO_BAG_RED_RETROSPOT>0.31 & data2$JUMBO_BAG_RED_RETROSPOT<=0.49,"<=0.49",ifelse(data2$JUMBO_BAG_RED_RETROSPOT>0.49,">0.49",""))) %>% as.factor
data2$PARTY_BUNTING <- ifelse(data2$PARTY_BUNTING<=0.32,"<=0.32", ifelse(data2$PARTY_BUNTING>0.32 & data2$PARTY_BUNTING<=0.65,"<=0.65",ifelse(data2$PARTY_BUNTING>0.65,">0.65",""))) %>% as.factor
data2$LUNCH_BAG_RED_RETROSPOT <- ifelse(data2$LUNCH_BAG_RED_RETROSPOT<=0.32,"<=0.32", ifelse(data2$LUNCH_BAG_RED_RETROSPOT>0.32 & data2$LUNCH_BAG_RED_RETROSPOT<=0.51,"<=0.51",ifelse(data2$LUNCH_BAG_RED_RETROSPOT>0.51,">0.51",""))) %>% as.factor
data2$SET_OF_3_CAKE_TINS_PANTRY_DESIGN <- ifelse(data2$SET_OF_3_CAKE_TINS_PANTRY_DESIGN<=0.34,"<=0.34", ifelse(data2$SET_OF_3_CAKE_TINS_PANTRY_DESIGN>0.34 & data2$SET_OF_3_CAKE_TINS_PANTRY_DESIGN<=0.56,"<=0.56",ifelse(data2$SET_OF_3_CAKE_TINS_PANTRY_DESIGN>0.56,">0.56",""))) %>% as.factor
data2$LUNCH_BAG_BLACK_SKULL <- ifelse(data2$LUNCH_BAG_BLACK_SKULL<=0.29,"<=0.29", ifelse(data2$LUNCH_BAG_BLACK_SKULL>0.29 & data2$LUNCH_BAG_BLACK_SKULL<=0.59,"<=0.59",ifelse(data2$LUNCH_BAG_BLACK_SKULL>0.59,">0.59",""))) %>% as.factor
data2$PACK_OF_72_RETROSPOT_CAKE_CASES <- ifelse(data2$PACK_OF_72_RETROSPOT_CAKE_CASES<=0.26,"<=0.26", ifelse(data2$PACK_OF_72_RETROSPOT_CAKE_CASES>0.26 & data2$PACK_OF_72_RETROSPOT_CAKE_CASES<=0.42,"<=0.42",ifelse(data2$PACK_OF_72_RETROSPOT_CAKE_CASES>0.42,">0.42",""))) %>% as.factor
data2$PAPER_CHAIN_KIT_50_S_CHRISTMAS <- ifelse(data2$PAPER_CHAIN_KIT_50_S_CHRISTMAS<=0.29,"<=0.29", ifelse(data2$PAPER_CHAIN_KIT_50_S_CHRISTMAS>0.29 & data2$PAPER_CHAIN_KIT_50_S_CHRISTMAS<=0.39,"<=0.39",ifelse(data2$PAPER_CHAIN_KIT_50_S_CHRISTMAS>0.39,">0.39",""))) %>% as.factor
data2$LUNCH_BAG_SPACEBOY_DESIGN <- ifelse(data2$LUNCH_BAG_SPACEBOY_DESIGN<=0.38,"<=0.38", ifelse(data2$LUNCH_BAG_SPACEBOY_DESIGN>0.38 & data2$LUNCH_BAG_SPACEBOY_DESIGN<=0.51,"<=0.51",ifelse(data2$LUNCH_BAG_SPACEBOY_DESIGN>0.51,">0.51",""))) %>% as.factor
data2$LUNCH_BAG_CARS_BLUE <- ifelse(data2$LUNCH_BAG_CARS_BLUE<=0.28,"<=0.28", ifelse(data2$LUNCH_BAG_CARS_BLUE>0.28 & data2$LUNCH_BAG_CARS_BLUE<=0.63,"<=0.63",ifelse(data2$LUNCH_BAG_CARS_BLUE>0.63,">0.63",""))) %>% as.factor
data2$LUNCH_BAG_PINK_POLKADOT <- ifelse(data2$LUNCH_BAG_PINK_POLKADOT<=0.38,"<=0.38", ifelse(data2$LUNCH_BAG_PINK_POLKADOT>0.38 & data2$LUNCH_BAG_PINK_POLKADOT<=0.72,"<=0.72",ifelse(data2$LUNCH_BAG_PINK_POLKADOT>0.72,">0.72",""))) %>% as.factor
data2$JAM_MAKING_SET_WITH_JARS <- ifelse(data2$JAM_MAKING_SET_WITH_JARS<=0.3,"<=0.3", ifelse(data2$JAM_MAKING_SET_WITH_JARS>0.3 & data2$JAM_MAKING_SET_WITH_JARS<=0.5,"<=0.5",ifelse(data2$JAM_MAKING_SET_WITH_JARS>0.5,">0.5",""))) %>% as.factor
data2$LUNCH_BAG_SUKI_DESIGN <- ifelse(data2$LUNCH_BAG_SUKI_DESIGN<=0.29,"<=0.29", ifelse(data2$LUNCH_BAG_SUKI_DESIGN>0.29 & data2$LUNCH_BAG_SUKI_DESIGN<=0.54,"<=0.54",ifelse(data2$LUNCH_BAG_SUKI_DESIGN>0.54,">0.54",""))) %>% as.factor
data2$LUNCH_BAG_APPLE_DESIGN <- ifelse(data2$LUNCH_BAG_APPLE_DESIGN<=0.34,"<=0.34", ifelse(data2$LUNCH_BAG_APPLE_DESIGN>0.34 & data2$LUNCH_BAG_APPLE_DESIGN<=0.47,"<=0.47",ifelse(data2$LUNCH_BAG_APPLE_DESIGN>0.47,">0.47",""))) %>% as.factor
data2$JAM_MAKING_SET_PRINTED <- ifelse(data2$JAM_MAKING_SET_PRINTED<=0.26,"<=0.26", ifelse(data2$JAM_MAKING_SET_PRINTED>0.26 & data2$JAM_MAKING_SET_PRINTED<=0.35,"<=0.35",ifelse(data2$JAM_MAKING_SET_PRINTED>0.35,">0.35",""))) %>% as.factor
data2$LUNCH_BAG_WOODLAND <- ifelse(data2$LUNCH_BAG_WOODLAND<=0.39,"<=0.39", ifelse(data2$LUNCH_BAG_WOODLAND>0.39 & data2$LUNCH_BAG_WOODLAND<=0.51,"<=0.51",ifelse(data2$LUNCH_BAG_WOODLAND>0.51,">0.51",""))) %>% as.factor
data2$JUMBO_STORAGE_BAG_SUKI <- ifelse(data2$JUMBO_STORAGE_BAG_SUKI<=0.36,"<=0.36", ifelse(data2$JUMBO_STORAGE_BAG_SUKI>0.36 & data2$JUMBO_STORAGE_BAG_SUKI<=0.84,"<=0.84",ifelse(data2$JUMBO_STORAGE_BAG_SUKI>0.84,">0.84",""))) %>% as.factor
data_final<-cbind.data.frame(data1[,1:10],data2)
# str(data_final)
# Look at the directed acyclic graph
dag <- empty.graph(nodes = c("Urban",
"Rural",
"Surburban",
"Web",
"Phone",
"Multichannel",
"Discount",
"BOGO",
"NoOffer",
"Treated_Responded",
"CLTV_12_months",
"WHITE_HANGING_HEART_T_LIGHT_HOLDER",
"REGENCY_CAKESTAND_3_TIER",
"JUMBO_BAG_RED_RETROSPOT",
"PARTY_BUNTING",
"LUNCH_BAG_RED_RETROSPOT",
"SET_OF_3_CAKE_TINS_PANTRY_DESIGN",
"LUNCH_BAG_BLACK_SKULL",
"PACK_OF_72_RETROSPOT_CAKE_CASES",
"PAPER_CHAIN_KIT_50_S_CHRISTMAS",
"LUNCH_BAG_SPACEBOY_DESIGN",
"LUNCH_BAG_CARS_BLUE",
"LUNCH_BAG_PINK_POLKADOT",
"JAM_MAKING_SET_WITH_JARS",
"LUNCH_BAG_SUKI_DESIGN",
"LUNCH_BAG_APPLE_DESIGN",
"JAM_MAKING_SET_PRINTED",
"LUNCH_BAG_WOODLAND",
"JUMBO_STORAGE_BAG_SUKI"))
arc.set <- matrix(c("PACK_OF_72_RETROSPOT_CAKE_CASES",	"CLTV_12_months",
"LUNCH_BAG_APPLE_DESIGN",	"CLTV_12_months",
"LUNCH_BAG_WOODLAND",	"CLTV_12_months",
"JAM_MAKING_SET_WITH_JARS",	"PACK_OF_72_RETROSPOT_CAKE_CASES",
"JAM_MAKING_SET_WITH_JARS",	"JAM_MAKING_SET_PRINTED",
"JAM_MAKING_SET_WITH_JARS",	"SET_OF_3_CAKE_TINS_PANTRY_DESIGN",
"SET_OF_3_CAKE_TINS_PANTRY_DESIGN",	"WHITE_HANGING_HEART_T_LIGHT_HOLDER",
"SET_OF_3_CAKE_TINS_PANTRY_DESIGN",	"LUNCH_BAG_SPACEBOY_DESIGN",
"LUNCH_BAG_SPACEBOY_DESIGN",	"LUNCH_BAG_APPLE_DESIGN",
"SET_OF_3_CAKE_TINS_PANTRY_DESIGN",	"JUMBO_STORAGE_BAG_SUKI",
"BOGO",	"JAM_MAKING_SET_WITH_JARS",
"Discount",	"BOGO",
"NoOffer",	"Discount",
"NoOffer",	"BOGO",
"NoOffer",	"Treated_Responded",
"Discount",	"LUNCH_BAG_WOODLAND",
"LUNCH_BAG_WOODLAND",	"LUNCH_BAG_RED_RETROSPOT",
"LUNCH_BAG_APPLE_DESIGN",	"LUNCH_BAG_RED_RETROSPOT",
"LUNCH_BAG_APPLE_DESIGN",	"LUNCH_BAG_WOODLAND",
"LUNCH_BAG_APPLE_DESIGN",	"LUNCH_BAG_SUKI_DESIGN",
"LUNCH_BAG_CARS_BLUE",	"LUNCH_BAG_WOODLAND",
"LUNCH_BAG_CARS_BLUE",	"LUNCH_BAG_SUKI_DESIGN",
"LUNCH_BAG_SUKI_DESIGN",	"LUNCH_BAG_BLACK_SKULL",
"LUNCH_BAG_BLACK_SKULL",	"LUNCH_BAG_PINK_POLKADOT",
"LUNCH_BAG_PINK_POLKADOT",	"JUMBO_BAG_RED_RETROSPOT",
"LUNCH_BAG_RED_RETROSPOT", "JUMBO_BAG_RED_RETROSPOT",
"JUMBO_BAG_RED_RETROSPOT",	"JAM_MAKING_SET_PRINTED",
"PACK_OF_72_RETROSPOT_CAKE_CASES",	"PAPER_CHAIN_KIT_50_S_CHRISTMAS",
"PAPER_CHAIN_KIT_50_S_CHRISTMAS",	"REGENCY_CAKESTAND_3_TIER",
"PAPER_CHAIN_KIT_50_S_CHRISTMAS",	"PARTY_BUNTING",
# "WHITE_HANGING_HEART_T_LIGHT_HOLDER",	"Multichannel",
"Multichannel",	"Web",
"Multichannel",	"JUMBO_BAG_RED_RETROSPOT",
"Phone", "Web",
"Phone", "Multichannel",
"Urban", "JAM_MAKING_SET_PRINTED",
"Urban", "Rural",
"Urban", "Surburban",
"Surburban", "LUNCH_BAG_RED_RETROSPOT"
),
byrow = TRUE, ncol = 2,
dimnames = list(NULL, c("from", "to")))
# Assigning the same arc
arcs(dag) <- arc.set
fittedmodel <- bn.fit(dag,data_final,method = 'mle')
compile_model <- compile(as.grain(fittedmodel))
input <- c()
input$Initialnode <- "LUNCH_BAG_APPLE_DESIGN"
input$Targetnode <- "CLTV_12_months"
b1 <- querygrain(compile_model,input$Initialnode,type = "marginal",result = "data.frame")
# cc <- data.frame(matrix(unlist(b[["CLTV_12_months"]]), nrow=length(b), byrow=FALSE))
cc1 <-as.data.frame( b1[[input$Initialnode]])
das<-c()
dash<-c()
for(i in 1:nrow(cc1)){
das[i]<-paste0(input$Initialnode,i)
dash[i]<-input[[das[i]]]
}
a<-unlist(dash)
a <- a/100
treequery1<-setEvidence(compile_model,nodes = input$Initialnode, states = list(a),propagate = F)
b <- querygrain(compile_model,input$Initialnode,type = "marginal",result = "data.frame")
# cc <- data.frame(matrix(unlist(b[["CLTV_12_months"]]), nrow=length(b), byrow=FALSE))
cc <-as.data.frame( b[[input$Initialnode]])
output$prob_values <- renderUI({
num_inputs <- lapply(1:nrow(cc), function(i){
numericInput(inputId = paste0(input$Initialnode,i), label = paste0("State : ",as.character(cc[input$Initialnode][i,1]), " %"), value = (round(cc$Freq[i]*100,2)), min = 0, max = 1)
}) %>% tagList
# shinyjs::hidden(num_inputs)
})
b1 <- querygrain(compile_model,input$Initialnode,type = "marginal",result = "data.frame")
# cc <- data.frame(matrix(unlist(b[["CLTV_12_months"]]), nrow=length(b), byrow=FALSE))
cc1 <-as.data.frame( b1[[input$Initialnode]])
das<-c()
dash<-c()
for(i in 1:nrow(cc1)){
das[i]<-paste0(input$Initialnode,i)
dash[i]<-input[[das[i]]]
}
a<-unlist(dash)
a <- a/100
a
View(cc1)
input$Initialnode
cc1
das
input[[das]]
input[[das[1]]]
runApp()
target_query_initial <- querygrain(compile_model,input$Targetnode,type = "marginal",result = "data.frame")
target_query_final <- querygrain(treequery1,input$Targetnode,type = "marginal",result = "data.frame")
dash <- c(0,100,0)
unlist(dash)
a<-unlist(dash)
a <- a/100
treequery1<-setEvidence(compile_model,nodes = input$Initialnode, states = list(),propagate = F)
treequery1<-setEvidence(compile_model,nodes = input$Initialnode, states = list(a),propagate = F)
target_query_initial <- querygrain(compile_model,input$Targetnode,type = "marginal",result = "data.frame")
target_query_final <- querygrain(treequery1,input$Targetnode,type = "marginal",result = "data.frame")
combined_query <- cbind.data.frame(target_query_initial,target_query_final)[-3]
combined_query
runApp()
dash <- c(50,50,0)
a<-unlist(dash)
a <- a/100
treequery1<-setEvidence(compile_model,nodes = input$Initialnode, states = list(a),propagate = F)
target_query_initial <- querygrain(compile_model,input$Targetnode,type = "marginal",result = "data.frame")
target_query_final <- querygrain(treequery1,input$Targetnode,type = "marginal",result = "data.frame")
combined_query <- cbind.data.frame(target_query_initial,target_query_final)[-3]
combined_query
runApp()
input$Initialnode <- "LUNCH_BAG_WOODLAND"
b <- querygrain(compile_model,input$Initialnode,type = "marginal",result = "data.frame")
# cc <- data.frame(matrix(unlist(b[["CLTV_12_months"]]), nrow=length(b), byrow=FALSE))
cc <-as.data.frame( b[[input$Initialnode]])
b1 <- querygrain(compile_model,input$Initialnode,type = "marginal",result = "data.frame")
# cc <- data.frame(matrix(unlist(b[["CLTV_12_months"]]), nrow=length(b), byrow=FALSE))
cc1 <-as.data.frame( b1[[input$Initialnode]])
das<-c()
dash<-c()
dash <- c(0,100,0)
a<-unlist(dash)
a <- a/100
treequery1<-setEvidence(compile_model,nodes = input$Initialnode, states = list(a),propagate = F)
target_query_initial <- querygrain(compile_model,input$Targetnode,type = "marginal",result = "data.frame")
target_query_final <- querygrain(treequery1,input$Targetnode,type = "marginal",result = "data.frame")
combined_query <- cbind.data.frame(target_query_initial,target_query_final)[-3]
combined_query
runApp()
runApp()
View(data_copy)
input$Initialnode <- "PACK_OF_72_RETROSPOT_CAKE_CASES"
b <- querygrain(compile_model,input$Initialnode,type = "marginal",result = "data.frame")
# cc <- data.frame(matrix(unlist(b[["CLTV_12_months"]]), nrow=length(b), byrow=FALSE))
cc <-as.data.frame( b[[input$Initialnode]])
output$prob_values <- renderUI({
num_inputs <- lapply(1:nrow(cc), function(i){
numericInput(inputId = paste0(input$Initialnode,i), label = paste0("State : ",as.character(cc[input$Initialnode][i,1]), " %"), value = (round(cc$Freq[i]*100,2)), min = 0, max = 1)
}) %>% tagList
# shinyjs::hidden(num_inputs)
})
b1 <- querygrain(compile_model,input$Initialnode,type = "marginal",result = "data.frame")
# cc <- data.frame(matrix(unlist(b[["CLTV_12_months"]]), nrow=length(b), byrow=FALSE))
cc1 <-as.data.frame( b1[[input$Initialnode]])
das<-c()
dash<-c()
dash <- c(0,100,0)
a<-unlist(dash)
a <- a/100
treequery1<-setEvidence(compile_model,nodes = input$Initialnode, states = list(a),propagate = F)
target_query_initial <- querygrain(compile_model,input$Targetnode,type = "marginal",result = "data.frame")
target_query_final <- querygrain(treequery1,input$Targetnode,type = "marginal",result = "data.frame")
combined_query <- cbind.data.frame(target_query_initial,target_query_final)[-3]
combined_query
runApp()
b <- querygrain(compile_model,input$Initialnode,type = "marginal",result = "data.frame")
input$Initialnode
# cc <- data.frame(matrix(unlist(b[["CLTV_12_months"]]), nrow=length(b), byrow=FALSE))
cc <-as.data.frame( b[[input$Initialnode]])
cc
input$Initialnode <- "CLTV_12_months"
b <- querygrain(compile_model,input$Initialnode,type = "marginal",result = "data.frame")
# cc <- data.frame(matrix(unlist(b[["CLTV_12_months"]]), nrow=length(b), byrow=FALSE))
cc <-as.data.frame( b[[input$Initialnode]])
cc
input$Initialnode <- "PACK_OF_72_RETROSPOT_CAKE_CASES"
b <- querygrain(compile_model,input$Initialnode,type = "marginal",result = "data.frame")
# cc <- data.frame(matrix(unlist(b[["CLTV_12_months"]]), nrow=length(b), byrow=FALSE))
cc <-as.data.frame( b[[input$Initialnode]])
b1 <- querygrain(compile_model,input$Initialnode,type = "marginal",result = "data.frame")
# cc <- data.frame(matrix(unlist(b[["CLTV_12_months"]]), nrow=length(b), byrow=FALSE))
cc1 <-as.data.frame( b1[[input$Initialnode]])
das<-c()
dash<-c()
das<-c()
dash<-c()
for(i in 1:nrow(cc1)){
das[i]<-paste0(input$Initialnode,i)
dash[i]<-input[[das[i]]]
}
dash
dash<-c()
for(i in 1:nrow(cc1)){
das[i]<-paste0(input$Initialnode,i)
dash[i]<-input[[das[i]]]
}
dash
cc1
combined_query
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
